#compdef tclock

_tclock() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
        ":: :_tclock_commands" \
        + '(color)' \
            {-c,--color}'[Foreground color of the clock. May also be secified as hexadecimal color code: #RRGGBB \[default: green\]]:clock color:(black blue cyan darkgray gray green lightblue lightcyan lightgreen lightmagenta lightred lightyellow magenta red white yellow)' \
        + '(help)' \
            {-h,--help}'[Print help information]' \
        + '(size)' \
            {-s,--size}'[Size of the clock, should be a positive integer (>=1) \[default: 1\]]:clock size:' \
        "*::: :->tclock" \
        && ret=0
    case $state in
        tclock)
            words=($line[1] "${words[@]}")
            (( CURRENT += 1 ))
            curcontext="${curcontext%:*:*}:tclock-command-$line[1]:"
            case $line[1] in
                clock)
                    _arguments "${_arguments_options[@]}" \
                        + '(date)' \
                            {-D,--no-date}'[Do not show date]' \
                        + '(help)' \
                            {-h,--help}'[Print help information]' \
                        + '(ms)' \
                            {-m,--millis}'[Show milliseconds]' \
                        + '(sec)' \
                            {-S,--no-seconds}'[Do not show seconds]' \
                        + '(tz)' \
                            {-z,--timezone}'[Custom timezone, for example "America/New_York", use local timezone if not specified]:timezone:_tclock__zoneinfo'
                    ret=0
                ;;
                countdown)
                    _arguments "${_arguments_options[@]}" \
                        + '(cont)' \
                            {-c,--continue}'[Continue to countdown after pass the target time]' \
                        + '(help)' \
                            {-h,--help}'[Print help information]' \
                        + '(ms)' \
                            {-m,--millis}'[Show milliseconds]' \
                        + '(rev)' \
                        {-r,--reverse}'[Reverse the countdown, a.k.a. countup]' \
                        + '(time)' \
                            {-t,--time}'[The target time to countdown to, eg. "2023-01-01", "20:00", "2022-12-25 20:00:00", or "2022-12-25T20:00:00-04:00"]:target time:' \
                        + '(title)' \
                            {-T,--title}'[Title or description for countdown show in header]:window title:'
                    ret=0
                ;;
                help)
                    ret=0
                ;;
                stopwatch)
                    ret=0
                ;;
                timer)
                    _arguments "${_arguments_options[@]}" \
                        + '(duration)' \
                            {-d,--duration}'[Initial duration for timer, value can be 10s for 10 seconds 1m for 1 minute, etc \[default: 5m\]]:timer duration:' \
                        + '(exec)' \
                            {-e,--execute}'[Command to run when the timer ends]:command to execute:' \
                        + '(help)' \
                            {-h,--help}'[Print help information]' \
                        + '(ms)' \
                            {-M,--no-millis}'[Hide milliseconds]' \
                        + '(pause)' \
                            {-P,--paused}'[Start the timer paused]'
                    ret=0
                ;;
                *)
            esac
            ;;
        *)
    esac

}

(( $+functions[_tclock_commands] )) ||
    _tclock_commands() {
        local commands; commands=(
            'clock:The clock mode displays the current time, the default mode'
            'countdown:The countdown timer mode shows the duration to a specific time'
            'help:Print this message or the help of the given subcommand(s)'
            'stopwatch:The stopwatch mode displays the elapsed time since it was started'
            'timer:The timer mode displays the remaining time until the timer is finished'
        )
        _describe -t commands 'tclock commands' commands "$@"
    }

(( $+functions[_tclock__zoneinfo] )) ||
    _tclock__zoneinfo() {
        local -a tzfiles=( $(print -rC1 -- /usr/share/zoneinfo/(*/)#^/*(.:t2)) )
        local commands; commands=()
        _wanted zoneinfo expl 'zoneinfo' compadd -a tzfiles
    }

_tclock "$@"
