#compdef chicken-install

_chicken-install() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
      '-version[show version and exit]' \
      '-force[don''t ask, install even if versions don''t match]' \
      '-recursive[if `-retrieve'' is given, retrieve also dependencies]' \
      '-dry-run[don not build or install, just print the locations of the generated build & install scripts]' \
      '-list-versions[list available versions for given eggs \(HTTP transport only\)]' \
      '-no-install-dependencies[do not install dependencies]' \
      '-purge[remove cached files for given eggs \(or purge cache completely\)]' \
      '-host[when cross-compiling, compile extension only for host]' \
      '-target[when cross-compiling, compile extension only for target]' \
      '-test[run included test-cases, if available]' \
      '-repository[print path used for egg installation]' \
      '-override+[override versions for installed eggs with information from file]:FILE:_files' \
      '-from-list+[install eggs from list obtained by `chicken-status -list'']:FILE:_files' \
      '-cached[only install from cache]' \
      '-defaults+[use FILENAME as defaults instead of the installed `setup.defaults'' file]:FILE:_files' \
      + '(help)' \
        {-h,-help}'[show this message and exit]' \
      + '(keep)' \
        {-k,-keep}'[keep temporary files]' \
      + '(sudo)' \
        {-s,-sudo}'[use external command to elevate privileges for filesystem operations]' \
      + '(retrieve)' \
        {-r,-retrieve}'[only retrieve egg into cache directory, don''t install (giving `-r'']' \
      + '(no-inst)' \
        {-n,-no-install}'[do not install, just build]' \
      + '(updatedb)' \
        {-u,-update-db}'[update export database]' \
      + '(verbose)' \
        {-v,-verbose}'[be verbose]' \
      + '(feature)' \
        {-D,-feature}'=[define build feature]:NAME:' \
      "*::egg:_chicken__eggs" \
      && ret=0
}

(( $+functions[_chicken__eggs] )) ||
  _chicken__eggs() {
    local CHICKEN_HOME="$(chicken-csi -R chicken.platform -p '(chicken-home)')"
    local -a eggs=( $(print -rC1 -- $CHICKEN_HOME/chicken-doc/root/*(/:t1)) )
    _wanted egg expl 'egg' compadd -a eggs
  }

if [ "$funcstack[1]" = "_chicken-install" ]; then
  _chicken-install "$@"
else
  compdef _chicken-install chicken-install
fi
